// Generated by CoffeeScript 1.10.0
var logError, parse, spawnSync;

spawnSync = require('child_process').spawnSync;

parse = require('./parse');

logError = require('./utils').logError;

module.exports = function(cmd, opts, cb) {
  var args, error, output, pid, ref, ref1, ref2, ref3, signal, status, stderr, stdout;
  ref = parse(cmd, opts), cmd = ref[0], args = ref[1], opts = ref[2];
  ref3 = spawnSync(cmd, args, {
    cwd: opts.cwd,
    input: opts.input,
    stdio: (ref1 = opts.stdio) != null ? ref1 : [0, 'pipe', 'pipe'],
    env: opts.env,
    uid: opts.uid,
    gid: opts.gid,
    timeout: opts.timeout,
    killSignal: opts.killSignal,
    maxBuffer: opts.maxBuffer,
    encoding: (ref2 = opts.encoding) != null ? ref2 : 'utf8'
  }), pid = ref3.pid, output = ref3.output, stdout = ref3.stdout, stderr = ref3.stderr, status = ref3.status, signal = ref3.signal, error = ref3.error;
  opts;
  if (!opts.quiet) {
    process.stdout.write(stdout);
    process.stderr.write(stderr);
  }
  if (!((error != null) || status !== 0)) {
    error = new Error("Command failed, '" + cmd + "' exited with status " + status);
  }
  if (error != null) {
    error.status = status;
    error.pid = pid;
    error.signal = signal;
    error.stderr = stderr;
    error.stdout = stdout;
    if (!opts.quiet) {
      logError(error);
    }
  }
  cb(error, stdout, stderr, status);
  return {
    status: status,
    stderr: stderr,
    stdout: stdout,
    error: error
  };
};

//# sourceMappingURL=execSync.js.map
